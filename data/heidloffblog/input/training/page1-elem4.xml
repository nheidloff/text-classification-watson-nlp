<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/" xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"><channel><title>Niklas Heidloff</title><atom:link href="http://heidloff.net/feed/" rel="self" type="application/rss+xml"/><link>http://heidloff.net</link><description/><lastBuildDate>
	Thu, 24 Nov 2022 10:47:53 +0000	</lastBuildDate><language>en-US</language><sy:updatePeriod>
	hourly	</sy:updatePeriod><sy:updateFrequency>
	1	</sy:updateFrequency><generator>https://wordpress.org/?v=5.1.15</generator><site xmlns="com-wordpress:feed-additions:1">102773794</site><item><title>Deploying Watson NLP to IBM Code Engine</title><link>http://heidloff.net/article/deploying-watson-nlp-to-ibm-code-engine/</link><pubDate>Tue, 22 Nov 2022 07:54:08 +0000</pubDate><dc:creator><![CDATA[Niklas Heidloff]]></dc:creator><category><![CDATA[Articles]]></category><guid isPermaLink="false">http://heidloff.net/?p=5421</guid><description><![CDATA[<p>IBM Watson NLP (Natural Language Understanding) and Watson Speech containers can be run locally, on-premises or Kubernetes and OpenShift clusters. Via REST and gRCP APIs AI can easily be embedded in applications. This post describes how to deploy and run Watson NLP on the serverless offering IBM Code Engine. To set some context, check out [&#8230;]</p>
<p>The post <a rel="nofollow" href="http://heidloff.net/article/deploying-watson-nlp-to-ibm-code-engine/">Deploying Watson NLP to IBM Code Engine</a> appeared first on <a rel="nofollow" href="http://heidloff.net">Niklas Heidloff</a>.</p>
]]></description><content:encoded><![CDATA[<p><em>IBM Watson NLP (Natural Language Understanding) and Watson Speech containers can be run locally, on-premises or Kubernetes and OpenShift clusters. Via REST and gRCP APIs AI can easily be embedded in applications. This post describes how to deploy and run Watson NLP on the serverless offering IBM Code Engine.</em><span id="more-5421"></span></p>
<p>To set some context, check out the landing page <a href="https://www.ibm.com/products/ibm-watson-natural-language-processing" rel="noopener noreferrer" target="_blank">IBM Watson NLP Library for Embed</a>. The Watson NLP containers can be run on different container platforms, they provide REST and gRCP interfaces, they can be extended with custom models and they can easily be embedded in solutions. While this offering is new, the underlaying functionality has been used and optimized for a long time in IBM offerings like the IBM Watson Assistant and NLU (Natural Language Understanding) SaaS services and IBM Cloud Pak for Data.</p>
<p>To try it, a <a href="https://www.ibm.com/products/ibm-watson-natural-language-processing" rel="noopener noreferrer" target="_blank">trial</a> is available. The container images are stored in an IBM container registry that is accessed via an <a href="https://www.ibm.com/account/reg/signup?formid=urx-51726" rel="noopener noreferrer" target="_blank">IBM Entitlement Key</a>.</p>
<p><strong>Step by Step Instructions</strong></p>
<p>First a custom image needs to be built which includes the NLP runtime and a list of models.</p>
<pre class="brush: plain; title: ; notranslate">
$ docker login cp.icr.io --username cp --password &lt;your-entitlement-key&gt;
$ mkdir models
$ docker run -it --rm -e ACCEPT_LICENSE=true -v `pwd`/models:/app/models cp.icr.io/cp/ai/watson-nlp_syntax_izumo_lang_en_stock:1.0.7
$ ls -la models 
$ cat &lt;&lt;EOF &gt;&gt;Dockerfile
FROM cp.icr.io/cp/ai/watson-nlp-runtime:1.0.18
COPY models /app/models
EOF
$ docker build . -t my-watson-nlp-runtime:latest
</pre>
<p>Next the custom image is pushed to a registry, in this case the IBM Container Registry.</p>
<pre class="brush: plain; title: ; notranslate">
$ ibmcloud plugin install cr
$ ibmcloud login --sso
$ ibmcloud cr region-set global
$ ibmcloud cr namespace-add watson-nlp-demo
$ ibmcloud cr login
$ docker tag my-watson-nlp-runtime:latest icr.io/watson-nlp-demo/my-watson-nlp-runtime:latest
$ docker push icr.io/watson-nlp-demo/my-watson-nlp-runtime:latest
</pre>
<p>After this the Code Engine project is created.</p>
<pre class="brush: plain; title: ; notranslate">
$ ibmcloud plugin install code-engine
$ ibmcloud target -r us-south -g default
$ ibmcloud ce project create --name watson-nlp-demo
$ ibmcloud ce project select --name watson-nlp-demo
</pre>
<p>To access the container registry from Code Engine, a secret is created. This can be done manually or programmatically.</p>
<ul>
<li><a href="https://cloud.ibm.com/docs/codeengine?topic=codeengine-cli#cli-secret-create" rel="noopener noreferrer" target="_blank">ibmcloud CLI documentation</a></li>
<li><a href="https://github.com/ibm-build-lab/Watson-NLP/blob/main/MLOps/Deploy-to-Code-Engine/README.md#step-14-create-a-code-engine-managed-secret-from-the-ibm-cloud-web-console" rel="noopener noreferrer" target="_blank">Manual instructions</a></li>
</ul>
<p>Finally the serverless application can be created.</p>
<pre class="brush: plain; title: ; notranslate">
$ ibmcloud ce application create \
  --name watson-nlp-runtime \
  --port 8080 \
  --min-scale 1 --max-scale 2 \
  --cpu 2 --memory 4G \
  --image private.icr.io/watson-nlp-demo/my-watson-nlp-runtime:latest \
  --registry-secret ce-auto-icr-private-global \
  --env ACCEPT_LICENSE=true
$ ibmcloud ce app list
$ ibmcloud ce app logs --application watson-nlp-runtime
$ ibmcloud ce app events --application watson-nlp-runtime
$ curl -X POST &quot;https://watson-nlp-runtime.vl0podgeqyi.us-south.codeengine.appdomain.cloud/v1/watson.runtime.nlp.v1/NlpService/SyntaxPredict&quot; \
  -H &quot;accept: application/json&quot; \
  -H &quot;grpc-metadata-mm-model-id: syntax_izumo_lang_en_stock&quot; \
  -H &quot;content-type: application/json&quot; \
  -d &quot; { \&quot;rawDocument\&quot;: { \&quot;text\&quot;: \&quot;It is so easy to embed Watson NLP in applications. Very cool.\&quot; }}&quot;
</pre>
<p><img src="http://heidloff.net/wp-content/uploads/2022/11/Screenshot-2022-11-22-at-08.50.03.png" alt="" width="2746" height="1610" class="alignnone size-full wp-image-5422" style="border: 1px solid #ddd;" srcset="http://heidloff.net/wp-content/uploads/2022/11/Screenshot-2022-11-22-at-08.50.03.png 2746w, http://heidloff.net/wp-content/uploads/2022/11/Screenshot-2022-11-22-at-08.50.03-300x176.png 300w, http://heidloff.net/wp-content/uploads/2022/11/Screenshot-2022-11-22-at-08.50.03-768x450.png 768w, http://heidloff.net/wp-content/uploads/2022/11/Screenshot-2022-11-22-at-08.50.03-1024x600.png 1024w" sizes="(max-width: 2746px) 100vw, 2746px" /></p>
<p>To find out more about Watson NLP and Watson for Embed in general, check out these resources:</p>
<ul>
<li><a href="https://www.ibm.com/docs/en/watson-libraries?topic=watson-natural-language-processing-library-embed-home" rel="noopener noreferrer" target="_blank">IBM Watson NLP Documentation</a></li>
<li><a href="https://www.ibm.com/account/reg/us-en/signup?formid=urx-51726" rel="noopener noreferrer" target="_blank">IBM Watson NLP Trial</a></li>
<li><a href="https://github.com/IBM/watson-automation" rel="noopener noreferrer" target="_blank">Automation for Watson NLP Deployments</a></li>
<li><a href="http://heidloff.net/article/running-ibm-watson-nlp-locally-in-containers/" rel="noopener noreferrer" target="_blank">Running IBM Watson NLP locally in Containers</a></li>
<li><a href="http://heidloff.net/article/running-ibm-watson-nlp-in-minikube/" rel="noopener noreferrer" target="_blank">Running IBM Watson NLP in Minikube</a></li>
</ul>
<p>The post <a rel="nofollow" href="http://heidloff.net/article/deploying-watson-nlp-to-ibm-code-engine/">Deploying Watson NLP to IBM Code Engine</a> appeared first on <a rel="nofollow" href="http://heidloff.net">Niklas Heidloff</a>.</p>
]]></content:encoded><post-id xmlns="com-wordpress:feed-additions:1">5421</post-id></item></channel></rss>