page2-elem6,Running IBM Watson NLP locally in Containers.
page2-elem6,IBM announced the general availability of Watson NLP (Natural Language Understanding) and Watson Speech containers which can be run locally on-premises or Kubernetes and OpenShift clusters.
page2-elem6,This post describes how to run Watson NLP locally.
page2-elem6,To set some context here is the description of IBM Watson NLP Library for Embed [https://www.ibm.com/products/ibm-watson-natural-language-processing].
page2-elem6,> Enhance your applications with best-in-class Natural Language AI: Introducing IBM Watson NLP Library for Embed a containerized library designed to empower IBM partners with greater flexibility to infuse powerful natural language AI into their solutions.
page2-elem6,It combines the best of open source and IBM Research NLP algorithms to deliver superior AI capabilities developers can access and integrate into their apps in the environment of their choice.
page2-elem6,Offered to partners as embeddable AI a first of its kind software portfolio that offers best of breed AI from IBM.
page2-elem6,The Watson NLP library is available as containers providing REST and gRPC interfaces.
page2-elem6,While this offering is new the underlaying functionality has been used and optimized for a long time in IBM offerings like the IBM Watson Assistant and NLU (Natural Language Understanding) SaaS services and IBM Cloud Pak for Data.
page2-elem6,Watson NLP comes with a wide variety of text processing functions such as emotion analysis and topic modeling.
page2-elem6,Watson NLP is built on top of the best AI open source software.
page2-elem6,Additionally it provides stable and supported interfaces it handles a wide range of languages and its quality is enterprise proven.
page2-elem6,To try it a trial [https://www.ibm.com/products/ibm-watson-natural-language-processing] is available.
page2-elem6,The container images are stored in an IBM container registry that is accessed via an IBM Entitlement Key [https://www.ibm.com/account/reg/signup?formid=urx-51726].
page2-elem6,How to run NLP locally via Docker
page2-elem6,To run NLP as container locally you first need to define which models [https://www.ibm.com/docs/en/watson-libraries?topic=models-catalog] you want to use which address different use cases.
page2-elem6,By only picking the ones you need the size of the containers is reduced.
page2-elem6,You can also train your own models which I want to blog about separately.
page2-elem6,To define your models save the following script to ‘runNLP.sh’ and modify the fourth line.
page2-elem6,The script pulls down the models and puts them in a volume that is accessed by the NLP runtime container.
page2-elem6,#!/usr/bin/env bash
page2-elem6,IMAGE_REGISTRY=${IMAGE_REGISTRY:-"cp.icr.io/cp/ai"}
page2-elem6,RUNTIME_IMAGE=${RUNTIME_IMAGE:-"watson-nlp-runtime:1.0.18"}
page2-elem6,export MODELS="${MODELS:-"watson-nlp_syntax_izumo_lang_en_stock:1.0.7watson-nlp_syntax_izumo_lang_fr_stock:1.0.7"}"
page2-elem6,IFS='' read -ra models_arr <<< "${MODELS}"
page2-elem6,# Create a shared volume and initialize with open permissions
page2-elem6,docker volume rm model_data 2>/dev/null || true
page2-elem6,docker volume create --label model_data
page2-elem6,docker run --rm -it -v model_data:/model_data alpine chmod 777 /model_data
page2-elem6,# Put models into the shared volume
page2-elem6,for model in "${models_arr[@]}"
page2-elem6,do
page2-elem6,docker run --rm -it -v model_data:/app/models -e ACCEPT_LICENSE=true $IMAGE_REGISTRY/$model
page2-elem6,done
page2-elem6,# Run the runtime with the models mounted
page2-elem6,docker run ${@} \
page2-elem6,--rm -it \
page2-elem6,-v model_data:/app/model_data \
page2-elem6,-e ACCEPT_LICENSE=true \
page2-elem6,-e LOCAL_MODELS_DIR=/app/model_data \
page2-elem6,-p 8085:8085 \
page2-elem6,-p 8080:8080 \
page2-elem6,$tls_args $IMAGE_REGISTRY/$RUNTIME_IMAGE
page2-elem6,To download the models and run the container invoke these commands in a first terminal:
page2-elem6,$ docker login cp.icr.io --username cp --password <entitlement_key>
page2-elem6,$ ./runNLP.sh
page2-elem6,In second terminal invoke this command to invoke a REST API:
page2-elem6,$ curl -X POST "http://localhost:8080/v1/watson.runtime.nlp.v1/NlpService/SyntaxPredict" \
page2-elem6,-H "accept: application/json" \
page2-elem6,-H "grpc-metadata-mm-model-id: syntax_izumo_lang_en_stock" \
page2-elem6,-H "content-type: application/json" \
page2-elem6,-d " { \"rawDocument\": { \"text\": \"It is so easy to embed Watson NLP in applications.
page2-elem6,Very cool.\" }}"
page2-elem6,Here is a screenshot of the container in action:
page2-elem6,You can invoke the Swagger (OpenAI) user interface by opening http://localhost:8080/swagger.
page2-elem6,The NLP containers also provides a gRCP interface [https://github.com/IBM/watson-automation#grpc].
page2-elem6,To find out more about Watson NLP check out these resources:
page2-elem6,* Documentation [https://www.ibm.com/docs/en/watson-libraries?topic=watson-natural-language-processing-library-embed-home]
page2-elem6,* Model catalog [https://www.ibm.com/docs/en/watson-libraries?topic=models-catalog]
page2-elem6,* Trial [https://www.ibm.com/products/ibm-watson-natural-language-processing]
page2-elem6,* Entitlement key [https://www.ibm.com/account/reg/us-en/subscribe?formid=urx-51726]
page2-elem6,* Automation for Watson NLP Deployments [https://github.com/IBM/watson-automation]
page2-elem6,The post Running IBM Watson NLP locally in Containers [http://heidloff.net/article/running-ibm-watson-nlp-locally-in-containers/] appeared first on Niklas Heidloff [http://heidloff.net].