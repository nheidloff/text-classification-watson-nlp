page1-elem4,Deploying Watson NLP to IBM Code Engine.
page1-elem4,IBM Watson NLP (Natural Language Understanding) and Watson Speech containers can be run locally on-premises or Kubernetes and OpenShift clusters.
page1-elem4,Via REST and gRCP APIs AI can easily be embedded in applications.
page1-elem4,This post describes how to deploy and run Watson NLP on the serverless offering IBM Code Engine.
page1-elem4,To set some context check out the landing page IBM Watson NLP Library for Embed [https://www.ibm.com/products/ibm-watson-natural-language-processing].
page1-elem4,The Watson NLP containers can be run on different container platforms they provide REST and gRCP interfaces they can be extended with custom models and they can easily be embedded in solutions.
page1-elem4,While this offering is new the underlaying functionality has been used and optimized for a long time in IBM offerings like the IBM Watson Assistant and NLU (Natural Language Understanding) SaaS services and IBM Cloud Pak for Data.
page1-elem4,To try it a trial [https://www.ibm.com/products/ibm-watson-natural-language-processing] is available.
page1-elem4,The container images are stored in an IBM container registry that is accessed via an IBM Entitlement Key [https://www.ibm.com/account/reg/signup?formid=urx-51726].
page1-elem4,Step by Step Instructions
page1-elem4,First a custom image needs to be built which includes the NLP runtime and a list of models.
page1-elem4,$ docker login cp.icr.io --username cp --password <your-entitlement-key>
page1-elem4,$ mkdir models
page1-elem4,$ docker run -it --rm -e ACCEPT_LICENSE=true -v `pwd`/models:/app/models cp.icr.io/cp/ai/watson-nlp_syntax_izumo_lang_en_stock:1.0.7
page1-elem4,$ ls -la models
page1-elem4,$ cat <<EOF >>Dockerfile
page1-elem4,FROM cp.icr.io/cp/ai/watson-nlp-runtime:1.0.18
page1-elem4,COPY models /app/models
page1-elem4,EOF
page1-elem4,$ docker build .
page1-elem4,-t my-watson-nlp-runtime:latest
page1-elem4,Next the custom image is pushed to a registry in this case the IBM Container Registry.
page1-elem4,$ ibmcloud plugin install cr
page1-elem4,$ ibmcloud login --sso
page1-elem4,$ ibmcloud cr region-set global
page1-elem4,$ ibmcloud cr namespace-add watson-nlp-demo
page1-elem4,$ ibmcloud cr login
page1-elem4,$ docker tag my-watson-nlp-runtime:latest icr.io/watson-nlp-demo/my-watson-nlp-runtime:latest
page1-elem4,$ docker push icr.io/watson-nlp-demo/my-watson-nlp-runtime:latest
page1-elem4,After this the Code Engine project is created.
page1-elem4,$ ibmcloud plugin install code-engine
page1-elem4,$ ibmcloud target -r us-south -g default
page1-elem4,$ ibmcloud ce project create --name watson-nlp-demo
page1-elem4,$ ibmcloud ce project select --name watson-nlp-demo
page1-elem4,To access the container registry from Code Engine a secret is created.
page1-elem4,This can be done manually or programmatically.
page1-elem4,* ibmcloud CLI documentation [https://cloud.ibm.com/docs/codeengine?topic=codeengine-cli#cli-secret-create]
page1-elem4,* Manual instructions [https://github.com/ibm-build-lab/Watson-NLP/blob/main/MLOps/Deploy-to-Code-Engine/README.md#step-14-create-a-code-engine-managed-secret-from-the-ibm-cloud-web-console]
page1-elem4,Finally the serverless application can be created.
page1-elem4,$ ibmcloud ce application create \
page1-elem4,--name watson-nlp-runtime \
page1-elem4,--port 8080 \
page1-elem4,--min-scale 1 --max-scale 2 \
page1-elem4,--cpu 2 --memory 4G \
page1-elem4,--image private.icr.io/watson-nlp-demo/my-watson-nlp-runtime:latest \
page1-elem4,--registry-secret ce-auto-icr-private-global \
page1-elem4,--env ACCEPT_LICENSE=true
page1-elem4,$ ibmcloud ce app list
page1-elem4,$ ibmcloud ce app logs --application watson-nlp-runtime
page1-elem4,$ ibmcloud ce app events --application watson-nlp-runtime
page1-elem4,$ curl -X POST "https://watson-nlp-runtime.vl0podgeqyi.us-south.codeengine.appdomain.cloud/v1/watson.runtime.nlp.v1/NlpService/SyntaxPredict" \
page1-elem4,-H "accept: application/json" \
page1-elem4,-H "grpc-metadata-mm-model-id: syntax_izumo_lang_en_stock" \
page1-elem4,-H "content-type: application/json" \
page1-elem4,-d " { \"rawDocument\": { \"text\": \"It is so easy to embed Watson NLP in applications.
page1-elem4,Very cool.\" }}"
page1-elem4,To find out more about Watson NLP and Watson for Embed in general check out these resources:
page1-elem4,* IBM Watson NLP Documentation [https://www.ibm.com/docs/en/watson-libraries?topic=watson-natural-language-processing-library-embed-home]
page1-elem4,* IBM Watson NLP Trial [https://www.ibm.com/account/reg/us-en/signup?formid=urx-51726]
page1-elem4,* Automation for Watson NLP Deployments [https://github.com/IBM/watson-automation]
page1-elem4,* Running IBM Watson NLP locally in Containers [http://heidloff.net/article/running-ibm-watson-nlp-locally-in-containers/]
page1-elem4,* Running IBM Watson NLP in Minikube [http://heidloff.net/article/running-ibm-watson-nlp-in-minikube/]
page1-elem4,The post Deploying Watson NLP to IBM Code Engine [http://heidloff.net/article/deploying-watson-nlp-to-ibm-code-engine/] appeared first on Niklas Heidloff [http://heidloff.net].