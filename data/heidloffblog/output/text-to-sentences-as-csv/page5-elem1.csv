page5-elem1,Continuous Delivery with DevSecOps Reference Architecture.
page5-elem1,IBM provides a DevSecOps reference implementation which is especially useful for regulated industries to adhere to policies.
page5-elem1,This article describes the CD pipeline to deploy software using a GitOps approach.
page5-elem1,Here is the definition of DevSecOps [https://cloud.ibm.com/docs/devsecops?topic=devsecops-devsecops_intro] from IBM:
page5-elem1,> DevSecOps is an evolution of Agile and DevOps integrating secure development best practices as early as possible in the software delivery lifecycle (also known as “shift left”).
page5-elem1,This approach prevents security problems from reaching production systems and failing corporate audits.
page5-elem1,DevSecOps requires automating security and compliance controls as part of continuous integration and continuous delivery processes.
page5-elem1,Evidence of these controls is also collected to demonstrate to auditors that every change in history meets the necessary controls.
page5-elem1,This article is part of a mini series:
page5-elem1,* DevSecOps for SaaS Reference Architecture on OpenShift [http://heidloff.net/article/devsecops-saas-reference-architecture-openshift/]
page5-elem1,* Shift-Left Continuous Integration with DevSecOps Pipelines [http://heidloff.net/article/shift-left-continuous-integration-devsecops-pipelines/]
page5-elem1,* Change Evidence and Issue Management with DevSecOps [http://heidloff.net/article/change-evidence-issue-management-devsecops/]
page5-elem1,* This article: Continuous Delivery with DevSecOps Reference Architecture [http://heidloff.net/article/continuous-delivery-ibm-devsecops-reference-architecture/]
page5-elem1,* Tekton without Tekton in DevSecOps Pipelines [http://heidloff.net/article/tekton-without-tekton-devsecops-pipelines/]
page5-elem1,In my previous blog [http://heidloff.net/article/change-evidence-issue-management-devsecops/] I explained the CI pipeline.
page5-elem1,The CI pipeline template that is part of IBM’s DevSecOps reference implementation builds and pushes images and runs various security and code tests.
page5-elem1,Only if all checks pass the application can be deployed to production via the CD pipeline.
page5-elem1,This assures that new versions can be deployed at any time based on business (not technical) decisions.
page5-elem1,The CD (continuous delivery) pipeline generates all of the evidence and change request summary content.
page5-elem1,The pipeline deploys the build artifacts to a specific environment and collects creates and uploads all existing log files evidence and artifacts to the evidence locker.
page5-elem1,Here is an overview of the functionality [https://cloud.ibm.com/docs/devsecops?topic=devsecops-cd-devsecops-cd-pipeline] provided by the CD pipeline:
page5-elem1,* Determine deployment delta
page5-elem1,* Calculate deployment BOM
page5-elem1,* Collect evidence summary
page5-elem1,* Prepare and create change request
page5-elem1,* Check change request approval
page5-elem1,* Perform deployment
page5-elem1,* Run acceptance test
page5-elem1,Let’s take a look at a concrete sample.
page5-elem1,My team has developed a SaaS reference architecture [https://github.com/IBM/multi-tenancy] that shows how our clients and partners can build software as a service.
page5-elem1,While the compute components are identical for multiple platforms like Kubernetes OpenShift and Serverless the way these components are deployed is specific to the platforms.
page5-elem1,Here is how the CD pipeline is used for Kubernetes and OpenShift deployments.
page5-elem1,In order to deploy a new application version for a specific tenant a pull request has to be created and merged.
page5-elem1,The pull request asks to merge the latest version from the main branch of the inventory to the tenant specific branches in the inventory.
page5-elem1,After the latest version has been merged into the branch of a specific tenant the deployment functionality of the DevSecOps reference implementation uses GitOps to deploy the application to the production environment of the tenant.
page5-elem1,This is done by comparing the actual ‘as is’ state in the cluster with the ‘to be’ state in the tenant branch.
page5-elem1,Here are the key steps performed in the CD pipelines.
page5-elem1,For the complete flow read the documentation.
page5-elem1,* Promotion pipeline [https://github.com/IBM/multi-tenancy-documentation/blob/main/documentation/kubernetes-via-ibm-kubernetes-service-and-ibm-openshift/cd-pull-request.md]: The first CD pipeline is a very simple ‘pipeline’ which only creates a pull request.
page5-elem1,* CD pipeline [https://github.com/IBM/multi-tenancy-documentation/blob/main/documentation/kubernetes-via-ibm-kubernetes-service-and-ibm-openshift/cd-pipeline.md]: The second CD pipeline is the actual CD pipeline.
page5-elem1,Create the pull request to deploy the latest version for a specific tenant.
page5-elem1,After defining all data the pull request can be merged.
page5-elem1,The actual CD pipeline (the second one) can be started in either of the following ways:
page5-elem1,* Preferred: Trigger the CD pipeline manually.
page5-elem1,* Optional: Automatically after every merge action in the inventory repository
page5-elem1,Global and tenant specific configuration is read.
page5-elem1,Either Kubernetes or OpenShift can be used; in a shared cluster or isolated clusters for tentants.
page5-elem1,The delta is calculated since only changes are deployed.
page5-elem1,Additionally security checks are performed again.
page5-elem1,After the actual deployment has been performed data is collected.
page5-elem1,Check out the IBM Toolchains documentation [https://cloud.ibm.com/docs/devsecops?topic=devsecops-tutorial-cd-devsecops] and the SaaS reference architecture [https://github.com/IBM/multi-tenancy] to find out more.
page5-elem1,The post Continuous Delivery with DevSecOps Reference Architecture [http://heidloff.net/article/continuous-delivery-ibm-devsecops-reference-architecture/] appeared first on Niklas Heidloff [http://heidloff.net].